# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Maven@3.209.0
  target: host
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'verify package'
    options: '-Denv.DEVOPS_FRAMEWORK_UNITTESTS=true'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'Cobertura'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m -Denv.DEVOPS_FRAMEWORK_UNITTESTS=true'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    checkStyleRunAnalysis: true
    pmdRunAnalysis: true
    findBugsRunAnalysis: true

# Need to install extension for this to work
# - task: WhiteSource Bolt@20
#   inputs:
#     cwd: '$(Build.SourcesDirectory)'
#     advance: true


# - task: SonarQubeAnalyze@4
# If needed will need configuring
- task: CopyFiles@2
  inputs:
    contents: '**/target/*.zip'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: CopyFiles@2
  inputs:
    contents: '**/target/*.hpi'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: CopyFiles@2
  inputs:
    contents: '**/target/devops-framework-core.jar'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: MyBuildOutputs
    
- task: Bash@3.201.1
  target: host
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo "$(Build.ArtifactStagingDirectory)"
      pwd
      env
      uname -a
      ls -laR
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
